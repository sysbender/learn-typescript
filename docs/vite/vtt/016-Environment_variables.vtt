WEBVTT

00:00:01.679 --> 00:00:06.920
environment variables and how to work

00:00:04.159 --> 00:00:09.040
with them in vid projects so we'll start

00:00:06.920 --> 00:00:11.920
with removing everything from our main

00:00:09.040 --> 00:00:14.880
Javascript file and in here all I'm

00:00:11.920 --> 00:00:17.800
going to do is actually print only one

00:00:14.880 --> 00:00:20.320
value so V exposes all environment

00:00:17.800 --> 00:00:22.760
variables to the client code under a

00:00:20.320 --> 00:00:25.320
special object which is stored inside

00:00:22.760 --> 00:00:27.840
the import meta object so if I'm going

00:00:25.320 --> 00:00:30.280
to print the value of this object in a

00:00:27.840 --> 00:00:32.760
console then in the browser we will see

00:00:30.280 --> 00:00:34.920
that this object already contains some

00:00:32.760 --> 00:00:36.920
default environment variables for

00:00:34.920 --> 00:00:40.080
example mode environment variables

00:00:36.920 --> 00:00:42.040
contains mode in which we have run V

00:00:40.080 --> 00:00:45.199
whether we have run development server

00:00:42.040 --> 00:00:47.760
by using npm runev or production build

00:00:45.199 --> 00:00:50.119
by using npm run build and now if we're

00:00:47.760 --> 00:00:53.199
going to go ahead and build this project

00:00:50.119 --> 00:00:55.400
by using npm run build and then open up

00:00:53.199 --> 00:00:58.679
the build project in the browser by

00:00:55.400 --> 00:01:01.639
running npm run preview then after

00:00:58.679 --> 00:01:03.440
opening this URL in the browser and

00:01:01.639 --> 00:01:05.760
taking a look at those environment

00:01:03.440 --> 00:01:07.840
variables we will see that this time

00:01:05.760 --> 00:01:10.440
value of the environment variable mode

00:01:07.840 --> 00:01:13.360
was changed on production as well as

00:01:10.440 --> 00:01:15.480
value of prod variable now it's true

00:01:13.360 --> 00:01:18.159
because now we are viewing build project

00:01:15.480 --> 00:01:20.880
in the browser and next let's see how we

00:01:18.159 --> 00:01:23.440
can Define our own environment variables

00:01:20.880 --> 00:01:27.520
and to do so we have to create the file

00:01:23.440 --> 00:01:30.320
called EnV and in here we can list all

00:01:27.520 --> 00:01:32.199
the variables that we need as an example

00:01:30.320 --> 00:01:36.440
I'm going to create a couple of

00:01:32.199 --> 00:01:39.280
environment variables with API URL and

00:01:36.440 --> 00:01:42.199
with another wire and for demonstration

00:01:39.280 --> 00:01:43.840
purposes let's just assign random values

00:01:42.199 --> 00:01:46.760
to each of these

00:01:43.840 --> 00:01:48.679
variables my Dev server is still running

00:01:46.760 --> 00:01:51.840
so let's open up the browser and see the

00:01:48.679 --> 00:01:54.920
result and this time in that in the

00:01:51.840 --> 00:01:57.199
object we have two more variables those

00:01:54.920 --> 00:01:59.960
are the variables we have just declared

00:01:57.199 --> 00:02:01.719
inside the EnV file and what's really

00:01:59.960 --> 00:02:04.360
important while declaring those

00:02:01.719 --> 00:02:06.880
environment variables in order for them

00:02:04.360 --> 00:02:08.960
to appear in this object we have to

00:02:06.880 --> 00:02:12.320
start the name of every environment

00:02:08.960 --> 00:02:15.560
variable with a special prefix which by

00:02:12.320 --> 00:02:18.480
default is V underscore because if we're

00:02:15.560 --> 00:02:20.080
going to try to create another variable

00:02:18.480 --> 00:02:23.119
without using Us in the prefix for

00:02:20.080 --> 00:02:25.600
example secret and then let's take a

00:02:23.119 --> 00:02:28.360
look if this variable is available in

00:02:25.600 --> 00:02:31.159
the console we will find out that this

00:02:28.360 --> 00:02:33.480
variable secret is nowhere to be found

00:02:31.159 --> 00:02:35.520
and this is intentional Behavior because

00:02:33.480 --> 00:02:38.280
every environment variable which we're

00:02:35.520 --> 00:02:40.119
going to declare in the environment file

00:02:38.280 --> 00:02:42.440
will be potentially included in the

00:02:40.119 --> 00:02:44.639
build project and those variables might

00:02:42.440 --> 00:02:47.119
contain some sensitive information such

00:02:44.639 --> 00:02:48.960
as database password and to prevent us

00:02:47.119 --> 00:02:50.800
from accidentally exposing those enir

00:02:48.960 --> 00:02:53.400
environment variables to the public

00:02:50.800 --> 00:02:56.400
build V forces us to explicitly use

00:02:53.400 --> 00:02:58.119
prefix in environment variable names to

00:02:56.400 --> 00:03:00.440
manually choose which environment

00:02:58.119 --> 00:03:02.760
variables should be available in the

00:03:00.440 --> 00:03:05.600
client code and by the way the prefix

00:03:02.760 --> 00:03:07.639
can be easily overwritten so to override

00:03:05.600 --> 00:03:11.440
the default prefix we can go to the

00:03:07.639 --> 00:03:13.679
configuration file with. config.js and

00:03:11.440 --> 00:03:16.880
the option that we need to overwrite the

00:03:13.679 --> 00:03:19.560
prefix is called invvy prefix and here

00:03:16.880 --> 00:03:21.040
we just specify desired prefix

00:03:19.560 --> 00:03:23.639
and this time by looking at the

00:03:21.040 --> 00:03:25.480
environment variables again we will see

00:03:23.639 --> 00:03:28.679
that none of those variables we have

00:03:25.480 --> 00:03:30.480
previously defined is visible in here

00:03:28.679 --> 00:03:32.800
and that makes sense because since we

00:03:30.480 --> 00:03:35.320
have changed the prefix we also have to

00:03:32.800 --> 00:03:37.520
change this prefix when declaring those

00:03:35.320 --> 00:03:40.280
environment variables so I'm going to

00:03:37.520 --> 00:03:43.199
quickly change this prefix on our new

00:03:40.280 --> 00:03:45.920
prefix and now as we can see those

00:03:43.199 --> 00:03:47.560
custom environment variables are back so

00:03:45.920 --> 00:03:50.000
this is how we can Define custom

00:03:47.560 --> 00:03:52.320
environment variables to be used in our

00:03:50.000 --> 00:03:55.159
client code by creating environment

00:03:52.320 --> 00:03:57.800
variable file with the name EnV but

00:03:55.159 --> 00:04:00.800
since V can run in multiple modes we can

00:03:57.800 --> 00:04:03.239
declare many such environment files for

00:04:00.800 --> 00:04:05.800
example if I only want some variables to

00:04:03.239 --> 00:04:10.040
be available in the production mode I

00:04:05.800 --> 00:04:12.719
can create the file do envy. mode name

00:04:10.040 --> 00:04:14.560
in this case it will be production and

00:04:12.719 --> 00:04:18.080
since by default when we run the build

00:04:14.560 --> 00:04:21.080
command executing npm run build it runs

00:04:18.080 --> 00:04:23.679
in production mode so that means these

00:04:21.080 --> 00:04:26.239
two variables will only be available

00:04:23.679 --> 00:04:30.080
when building the project for production

00:04:26.239 --> 00:04:32.920
so let's run the npm Run build and then

00:04:30.080 --> 00:04:34.960
npm run preview to open up the build in

00:04:32.920 --> 00:04:36.880
the browser and this time we see that

00:04:34.960 --> 00:04:39.800
these environment variables contain

00:04:36.880 --> 00:04:43.440
those values that were earlier specified

00:04:39.800 --> 00:04:45.440
in the file. env. production and if we

00:04:43.440 --> 00:04:47.480
switch over to the first tab where my

00:04:45.440 --> 00:04:49.520
development project is still running

00:04:47.480 --> 00:04:52.920
here I'm seeing that those two variables

00:04:49.520 --> 00:04:55.719
have different values the values from

00:04:52.920 --> 00:04:59.199
EnV file and when we start development

00:04:55.719 --> 00:05:01.440
server by running npm randev V runs in

00:04:59.199 --> 00:05:03.639
development mode but we are not limited

00:05:01.440 --> 00:05:06.440
to only those two modes development and

00:05:03.639 --> 00:05:09.119
production we can use as many modes as

00:05:06.440 --> 00:05:11.000
we wish so for example for some reason I

00:05:09.119 --> 00:05:14.440
want to build a project for a different

00:05:11.000 --> 00:05:16.320
mode let's say for St in and this build

00:05:14.440 --> 00:05:19.360
should have different values for some of

00:05:16.320 --> 00:05:22.400
the environment variables so so to do

00:05:19.360 --> 00:05:26.480
that I will just create another

00:05:22.400 --> 00:05:30.000
environment file EnV and then following

00:05:26.480 --> 00:05:32.679
the same convention do environment name

00:05:30.000 --> 00:05:35.639
in this case it will be called envy.

00:05:32.679 --> 00:05:37.800
staging in here just to demonstrate I'm

00:05:35.639 --> 00:05:40.400
going to modify values of these two

00:05:37.800 --> 00:05:43.800
environment variables and now we will

00:05:40.400 --> 00:05:46.600
try to build the project by using this

00:05:43.800 --> 00:05:48.480
stag in mode so to specify the custom

00:05:46.600 --> 00:05:51.320
mode that V should use while building

00:05:48.480 --> 00:05:55.920
the project we need to write this right

00:05:51.320 --> 00:05:59.199
after npm run build we use two hyphens

00:05:55.920 --> 00:06:02.000
then another two hyphens mode this will

00:05:59.199 --> 00:06:04.520
be an option Name by using which we

00:06:02.000 --> 00:06:08.239
specify custom mode and then we just

00:06:04.520 --> 00:06:10.520
specify our custom mode name stag in and

00:06:08.239 --> 00:06:13.080
this time let's take a look at the

00:06:10.520 --> 00:06:15.199
values of those two variables and now

00:06:13.080 --> 00:06:18.880
let's open up the build in the browser

00:06:15.199 --> 00:06:21.520
by using npm run preview and take a look

00:06:18.880 --> 00:06:23.639
at those two environment variables so as

00:06:21.520 --> 00:06:26.800
we can see these environment variables

00:06:23.639 --> 00:06:29.760
have taken their values from the file.in

00:06:26.800 --> 00:06:32.400
v. stag because we have just built a

00:06:29.760 --> 00:06:35.239
project with using our custom mode

00:06:32.400 --> 00:06:37.639
staging and now in our inspector let's

00:06:35.239 --> 00:06:40.280
take a look at the transformation that

00:06:37.639 --> 00:06:42.119
itd has applied to this line when we are

00:06:40.280 --> 00:06:44.960
printing all environment variables in

00:06:42.119 --> 00:06:47.119
the console so basically took this line

00:06:44.960 --> 00:06:49.000
and assign an object with all

00:06:47.119 --> 00:06:51.800
environment variables to to the

00:06:49.000 --> 00:06:54.600
property. EnV and if we take a look in

00:06:51.800 --> 00:06:56.280
the browser it will be more clear so

00:06:54.600 --> 00:06:58.880
let's take a look at the content of the

00:06:56.280 --> 00:07:01.440
main Javascript file and right here we

00:06:58.880 --> 00:07:04.719
can see that an object with all

00:07:01.440 --> 00:07:07.719
environment variables was assigned to NV

00:07:04.719 --> 00:07:10.080
property and this way those environment

00:07:07.719 --> 00:07:12.360
variables are accessible in our client

00:07:10.080 --> 00:07:14.480
code and besides accessing those

00:07:12.360 --> 00:07:17.440
environment variables in the JavaScript

00:07:14.480 --> 00:07:19.159
files we can also access these variables

00:07:17.440 --> 00:07:21.199
in HTML file

00:07:19.159 --> 00:07:24.800
so for example let's print out the value

00:07:21.199 --> 00:07:27.159
of this app API URL variable in the

00:07:24.800 --> 00:07:30.119
index.html and in order to print

00:07:27.159 --> 00:07:32.400
environment variables in HTML file we

00:07:30.119 --> 00:07:35.199
just use a simple notation between

00:07:32.400 --> 00:07:37.520
percentage signs with specify variable

00:07:35.199 --> 00:07:39.960
name in this way this variable will be

00:07:37.520 --> 00:07:42.080
printed on the page so in this case

00:07:39.960 --> 00:07:43.880
since I'm running the development server

00:07:42.080 --> 00:07:46.800
then this environment variables value

00:07:43.880 --> 00:07:48.520
was taken fromt EnV file but if we're

00:07:46.800 --> 00:07:51.560
going to go ahead and build a project

00:07:48.520 --> 00:07:54.280
for production by using mpm run build

00:07:51.560 --> 00:07:56.600
and then take a look at the page here we

00:07:54.280 --> 00:07:59.520
see a different value because this value

00:07:56.600 --> 00:08:01.960
has been taken from environment file

00:07:59.520 --> 00:08:05.280
which corresponds to production mode

00:08:01.960 --> 00:08:08.000
called env. production because as a

00:08:05.280 --> 00:08:10.440
reminder VD executes the build in

00:08:08.000 --> 00:08:12.719
production mode but keep in mind that in

00:08:10.440 --> 00:08:14.520
order to use these environment variables

00:08:12.719 --> 00:08:17.400
in the client code we have to use the

00:08:14.520 --> 00:08:19.119
prefix in their names the default prefix

00:08:17.400 --> 00:08:21.280
is vore

00:08:19.119 --> 00:08:24.960
but in our case we have overwritten this

00:08:21.280 --> 00:08:27.040
prefix on up underscore and one more

00:08:24.960 --> 00:08:29.760
thing that is also worth mentioning

00:08:27.040 --> 00:08:32.280
regarding environment variables is that

00:08:29.760 --> 00:08:35.400
we can also specify these environment

00:08:32.280 --> 00:08:37.600
variables while executing VD commments

00:08:35.400 --> 00:08:40.520
for example here I'm going to start

00:08:37.600 --> 00:08:42.520
development server and at the same time

00:08:40.520 --> 00:08:46.440
I'm going to declare environment

00:08:42.520 --> 00:08:48.639
variable up API URL and by declaring

00:08:46.440 --> 00:08:51.239
environment variables in this way it

00:08:48.639 --> 00:08:53.920
will overwrite all those environment

00:08:51.239 --> 00:08:57.920
variables with the same name that were

00:08:53.920 --> 00:09:00.040
declared in any inv file so if I open up

00:08:57.920 --> 00:09:01.800
development server in the browser we

00:09:00.040 --> 00:09:04.000
will see that the value of that

00:09:01.800 --> 00:09:05.600
environment variable will be exactly the

00:09:04.000 --> 00:09:08.440
one that we have specified in the

00:09:05.600 --> 00:09:10.440
terminal while executing npm randev

00:09:08.440 --> 00:09:13.719
commment because that value has over

00:09:10.440 --> 00:09:16.080
written any values specified in any EnV

00:09:13.719 --> 00:09:19.400
files and that is how we can work with

00:09:16.080 --> 00:09:21.480
environment variables in vid projects

