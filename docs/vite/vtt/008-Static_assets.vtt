WEBVTT

00:00:01.760 --> 00:00:06.040
take a look at how to import static

00:00:04.040 --> 00:00:08.040
assets so let's just create new

00:00:06.040 --> 00:00:12.159
directory in our project we're going to

00:00:08.040 --> 00:00:14.919
use the following pass Source assets IMG

00:00:12.159 --> 00:00:17.879
and here we're going to move our image

00:00:14.919 --> 00:00:20.359
javascript. SVG and now let's try to

00:00:17.879 --> 00:00:23.240
impert this image in our main Javascript

00:00:20.359 --> 00:00:26.160
file so I'm going to add import

00:00:23.240 --> 00:00:28.240
statement and let's just reference that

00:00:26.160 --> 00:00:32.680
file that was previously moved within

00:00:28.240 --> 00:00:35.400
IMG folder with the name javascript. SVG

00:00:32.680 --> 00:00:38.520
and just to see how V is going to handle

00:00:35.400 --> 00:00:41.359
such image import we're going to print

00:00:38.520 --> 00:00:43.800
value of this image URL variable in a

00:00:41.359 --> 00:00:46.599
console and as we can see VD has given

00:00:43.800 --> 00:00:48.880
us full pass to that image so when our

00:00:46.599 --> 00:00:51.520
browser requested our main JavaScript

00:00:48.880 --> 00:00:54.000
file we see that the import of our image

00:00:51.520 --> 00:00:56.280
was transformed a little bit by adding

00:00:54.000 --> 00:00:58.680
import query parameter to the end of

00:00:56.280 --> 00:01:01.480
this pass and once browser has made

00:00:58.680 --> 00:01:03.520
another request to fetch this file we

00:01:01.480 --> 00:01:05.800
can see that VD has given us valid

00:01:03.520 --> 00:01:09.000
ecmascript module with the default

00:01:05.800 --> 00:01:11.800
expert which points to that image in our

00:01:09.000 --> 00:01:14.480
project so basically thisas module

00:01:11.800 --> 00:01:16.440
returns pass to their exported image and

00:01:14.480 --> 00:01:19.040
of course that pass was assigned to

00:01:16.440 --> 00:01:21.359
image URL variable which we have printed

00:01:19.040 --> 00:01:23.280
in a console and now we can do with this

00:01:21.359 --> 00:01:27.520
pass whatever we like for example let's

00:01:23.280 --> 00:01:30.240
add new Element image into our HTML file

00:01:27.520 --> 00:01:32.920
with an IDE of image and then from the

00:01:30.240 --> 00:01:35.920
JavaScript code we're going to get an

00:01:32.920 --> 00:01:38.200
image by using get element by ID method

00:01:35.920 --> 00:01:40.800
and then we can assign that pass to

00:01:38.200 --> 00:01:43.359
Source attribute so the image will be

00:01:40.800 --> 00:01:46.720
displayed in the browser and as we can

00:01:43.359 --> 00:01:49.760
see it worked and in a browser def tools

00:01:46.720 --> 00:01:52.119
Source attribute contains pass of the

00:01:49.760 --> 00:01:54.680
exported image and of course that image

00:01:52.119 --> 00:01:57.480
is shown on the page so once again when

00:01:54.680 --> 00:02:00.200
we have imported our image in the main

00:01:57.480 --> 00:02:03.920
Javascript file the pass to this image

00:02:00.200 --> 00:02:06.640
was saved into image URL variable and

00:02:03.920 --> 00:02:09.760
then we used this variable to assign to

00:02:06.640 --> 00:02:12.440
Source attribute of image element and

00:02:09.760 --> 00:02:14.640
this way image was displayed on the page

00:02:12.440 --> 00:02:16.920
and besides importing images like this

00:02:14.640 --> 00:02:20.319
we can also import other file types for

00:02:16.920 --> 00:02:22.720
example Json file let's try an example

00:02:20.319 --> 00:02:25.440
here I'm going to import Json file from

00:02:22.720 --> 00:02:28.240
the assets folder and within this space

00:02:25.440 --> 00:02:30.800
I'm also going to include URL query Pam

00:02:28.240 --> 00:02:33.319
like so and now let's see what this Pam

00:02:30.800 --> 00:02:36.720
URL is used for we're going to print

00:02:33.319 --> 00:02:39.160
this URL in a console switch over to the

00:02:36.720 --> 00:02:41.880
browser and right here when our browser

00:02:39.160 --> 00:02:44.640
has requested Json file by the following

00:02:41.880 --> 00:02:46.280
address instead of experting Json object

00:02:44.640 --> 00:02:49.480
as we have seen in one of the previous

00:02:46.280 --> 00:02:52.119
lessons by adding URL query R to this

00:02:49.480 --> 00:02:54.640
pass V has transformed exported Json

00:02:52.119 --> 00:02:57.599
file into valid masri module with the

00:02:54.640 --> 00:02:59.920
default expert which actually points to

00:02:57.599 --> 00:03:02.359
imported file but what if while

00:02:59.920 --> 00:03:04.760
importing images we can receive content

00:03:02.359 --> 00:03:07.359
of an image instead of the pass to this

00:03:04.760 --> 00:03:10.839
image so in such cases we can use

00:03:07.359 --> 00:03:12.960
another query param called row like so

00:03:10.839 --> 00:03:15.240
and in this case instead of giving us

00:03:12.960 --> 00:03:17.960
URL to this image within image URL

00:03:15.240 --> 00:03:20.880
variable V will return the content of

00:03:17.960 --> 00:03:23.680
the file J javascript. SV and we can see

00:03:20.880 --> 00:03:26.119
this content was printed in a console so

00:03:23.680 --> 00:03:29.920
in terms of Transformations if we take a

00:03:26.119 --> 00:03:31.599
look at javascript. SVG request here we

00:03:29.920 --> 00:03:34.040
see that the vid has transformed the

00:03:31.599 --> 00:03:37.319
request at file pass into valid excript

00:03:34.040 --> 00:03:40.160
module where default expert is the whole

00:03:37.319 --> 00:03:42.160
content of this image so in this lesson

00:03:40.160 --> 00:03:44.640
we have taken a look how to import

00:03:42.160 --> 00:03:46.920
static assets such as images into

00:03:44.640 --> 00:03:48.800
JavaScript files and additionally we

00:03:46.920 --> 00:03:50.960
have also taken a look at a few Cod

00:03:48.800 --> 00:03:55.119
parameters we can use while importing

00:03:50.960 --> 00:03:57.000
static assets such as URL and row in the

