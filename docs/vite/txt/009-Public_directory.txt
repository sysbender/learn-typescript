rot to VD project there is a special
folder called public and this is the
folder where we can store all our static
assets but of course as we have already
seen static assets can be stored in
different directories such as source so
what's special about this public folder
then and the thing is that all static
files stored within public folder they
cannot be referenced in our source files
for for example we cannot import them
like this as we are importing
javascript. SVG file in here so that
means that VD does not process all those
files that are stored within public
folder let's see an example I'm going to
add one more image tag in here and a
reference image from public folder with
a name v. SVG so at this point our page
shows two different images One image was
imported directly in our source file and
browser has EST at the module which
experts pass to the first image
javascript. SVG this is the image which
was referenced from within our source
file so we manually imported this image
as a kript module but if we take a look
at another image and the way how this
image was fetched we will see that in
this case browser has requested this
image directly by its name as a normal
static file and so whenever we want some
static assets to be accessible as normal
static files
so we can reference them by name we have
to place such files within special
public folder in vid project and by the
way all the files that we will store
within special public folder they cannot
be referenced from within source code
meaning that we cannot import them
directly as sigas script modules from
within JavaScript code and all files
that are located within public folder
they will not be processed by V during
the build so for example if I'm going to
will try to build this project right now
by running npm run build in the terminal
among the build Assets in here I'm going
to see that JavaScript image which we
referenced in the source code so with
while importing this image has made some
transformations to it and appended
random hash to its name but in this
output we don't actually see another
image with the name v. SVG which we have
placed into public folder and referenced
in HTML file and that means vid hasn't
done any transformations to v.svg image
so what it did instead is it took this
image from the public folder and copied
it into this folder and this this folder
was generated by running npm run build
command so this is the folder where it
places all buildt files of our project
for example we want public folder to be
renamed on build folder for such cases V
provides us with another option that we
can add into the VD config SVG called
public deer and in here we specify
desired folder name for static assets
I'm going to specify build of course
after this I also have to rename public
folder on build and let's try to run the
build Again by running npm run build in
the terminal as we can see this time
build was also finished successfully and
that static file v. SVG was successfully
copied from the build folder into our
dist folder with a build project so that
means that vid has recognized new name
for our static folder built and we are
still able to reference our static file
with SVG from the source code so let's
remove that option public deer as well
as folder with a build project disc and
let's rename folder with static file
back to public and just to make sure
that we haven't broken anything let's
run the build common again and see if
project will be built successfully as we
can see nothing was broken and built
still works and besides these comons npm
run Dev to run development server and
npm run build to build a project for
production initially we also defines
another comment called preview which is
going to run simple static server ser
and this server is mainly used to serve
folder with built project files and this
way we can check how our project is
going to behave by using production
build files in the production like
environment so now that we have already
built the project and generated this
folder we can run this npm run preview
command to run static server inside of
that dist folder let's do so by running
npm run preview as we can see this
static server was run on Port
4173 and by opening up this address in
the browser we don't see any visual
changes our project still looks like in
the development mode but in fact if we
will take a look at the request which
fetches main Javascript file we are not
going to see any ecmascript import
statements in here because during the
production build VD has actually taken
all the modules and bundled them within
one JavaScript file and this resulting
Javascript file was fetched in one go in
the browser and this is how we can run
simple static server to serve all the
files from the build folder now let's go
back stop this startic server and
instead run development server by
running npm runev and since we don't
need the folder with a build project
anymore let's remove it and finish this
lesson V ports Import in several modules